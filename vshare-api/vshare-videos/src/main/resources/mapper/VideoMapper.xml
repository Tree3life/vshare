<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tree3.dao.VideoMapper">

    <resultMap type="com.tree3.pojo.entity.Video" id="VideoMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="intro" column="intro" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="cover" column="cover" jdbcType="VARCHAR"/>
        <result property="link" column="link" jdbcType="VARCHAR"/>
        <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="deletedAt" column="deleted_at" jdbcType="TIMESTAMP"/>
    </resultMap>


    <resultMap type="com.tree3.pojo.vo.VideoVO" id="VideosMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="cover" column="cover" jdbcType="VARCHAR"/>
        <result property="category" column="cname" jdbcType="VARCHAR"/>
        <result property="uploader" column="uname" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--        <result property="uploader" column="uname" jdbcType="VARCHAR"/>-->
    <!--    <resultMap type="com.tree3.pojo.vo.VideoDetailVO" id="VideoDetailVOMap">-->

    <!--        <collection property="comments" ofType="com.tree3.pojo.entity.Comment">-->

    <!--        </collection>-->

    <!--        <association property="uploader" javaType="com.tree3.pojo.entity.User">-->

    <!--        </association>-->

    <!--        <result property="id" column="id" jdbcType="INTEGER"/>-->
    <!--        <result property="title" column="title" jdbcType="VARCHAR"/>-->
    <!--        <result property="category" column="category" jdbcType="VARCHAR"/>-->
    <!--        <result property="link" column="link" jdbcType="VARCHAR"/>-->

    <!--        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>-->
    <!--        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>-->
    <!--        <result property="playsCount" column="plays_count" jdbcType="INTEGER"/>-->
    <!--        <result property="likesCount" column="likes_count" jdbcType="INTEGER"/>-->
    <!--        <result property="liked" column="liked"/>-->
    <!--        <result property="disliked" column="disliked"/>-->
    <!--        <result property="favorite" column="favorite"/>-->
    <!--    </resultMap>-->

    <!--全部字段-->
    <sql id="allColumn"> id
    , title, intro, uid, cover, link, category_id, created_at, updated_at, deleted_at </sql>

    <!--通用对Video各个属性的值的非空判断-->
    <sql id="commonsValue">
        <if test="title != null and title != ''">
            title = #{title},
        </if>
        <if test="intro != null and intro != ''">
            intro = #{intro},
        </if>
        <if test="uid != null">
            uid = #{uid},
        </if>
        <if test="cover != null and cover != ''">
            cover = #{cover},
        </if>
        <if test="link != null and link != ''">
            link = #{link},
        </if>
        <if test="categoryId != null">
            category_id = #{categoryId},
        </if>
        <if test="createdAt != null">
            created_at = #{createdAt},
        </if>
        <if test="updatedAt != null">
            updated_at = #{updatedAt},
        </if>
        <if test="deletedAt != null">
            deleted_at = #{deletedAt},
        </if>
    </sql>

    <!--添加语句的字段列表-->
    <sql id="insertColumn">
        <if test="title != null and title != ''">
            title,
        </if>
        <if test="intro != null and intro != ''">
            intro,
        </if>
        <if test="uid != null">
            uid,
        </if>
        <if test="cover != null and cover != ''">
            cover,
        </if>
        <if test="link != null and link != ''">
            link,
        </if>
        <if test="categoryId != null">
            category_id,
        </if>
        <if test="createdAt != null">
            created_at,
        </if>
        <if test="updatedAt != null">
            updated_at,
        </if>
        <if test="deletedAt != null">
            deleted_at,
        </if>
    </sql>

    <!--添加语句的值列表-->
    <sql id="insertValue">
        <if test="title != null and title != ''">
            #{title},
        </if>
        <if test="intro != null and intro != ''">
            #{intro},
        </if>
        <if test="uid != null">
            #{uid},
        </if>
        <if test="cover != null and cover != ''">
            #{cover},
        </if>
        <if test="link != null and link != ''">
            #{link},
        </if>
        <if test="categoryId != null">
            #{categoryId},
        </if>
        <if test="createdAt != null">
            #{createdAt},
        </if>
        <if test="updatedAt != null">
            #{updatedAt},
        </if>
        <if test="deletedAt != null">
            #{deletedAt},
        </if>
    </sql>
    <!--分页查询的配置 page,pageSize-->
    <sql id="limitConfig">
        <if test="offset != null and pageSize != null">
            limit #{offset}, #{pageSize}
        </if>
    </sql>
    <!--多条件查询的条件-->
    <sql id="queryCondition">
        <if test="id != null">
            and id = #{id}
        </if>

        <if test="title != null and title != ''">
            and title = #{title}
        </if>
        <if test="intro != null and intro != ''">
            and intro = #{intro}
        </if>
        <if test="uid != null">
            and uid = #{uid}
        </if>
        <if test="cover != null and cover != ''">
            and cover = #{cover}
        </if>
        <if test="link != null and link != ''">
            and link = #{link}
        </if>
        <if test="categoryId != null">
            and category_id = #{categoryId}
        </if>
        <if test="createdAt != null">
            and created_at = #{createdAt}
        </if>
        <if test="updatedAt != null">
            and updated_at = #{updatedAt}
        </if>
        <if test="deletedAt != null">
            and deleted_at = #{deletedAt}
        </if>
    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="VideoMap">
        select
        <include refid="allColumn"></include>
        from video
        <where>
            id = #{id}
        </where>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="VideoMap">
        select
        <include refid="allColumn"></include>
        from video
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="queryCondition"></include>
        </trim>
        <include refid="limitConfig"></include>
    </select>

    <select id="queryVideoVoByVids" resultMap="VideosMap">
        select
        v.id,v.title,v.cover,v.created_at,
        c.`name` cname,
        u.`name` uname
        from video v
        left join category c on c.id=v.category_id
        left join `user` u on u.id=v.uid
        <where>
            v.id in
            <foreach collection="ids" open="(" close=")" item="i" separator=",">
                #{i}
            </foreach>
        </where>
    </select>
    <select id="queryAllByPage" resultMap="VideosMap">
        select
        v.id,v.title,v.cover,v.created_at,
        c.`name` cname,
        u.`name` uname
        from video v
        left join category c on c.id=v.category_id
        left join `user` u on u.id=v.uid
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <if test="video.id != null">
                and v.id = #{video.id}
            </if>
            <if test="video.categoryId != null">
                and v.category_id = #{video.categoryId}
            </if>
            <if test="video.title != null and title != ''">
                and title = #{video.title}
            </if>
        </trim>
        <include refid="limitConfig"></include>
    </select>
    <!--    Available parameters are [offset, pageSize, video, param3, param1, param2]-->
    <!--条件查询单个元素-->
    <select id="queryVideo" resultMap="VideoMap">
        select
        <include refid="allColumn"></include>
        from video
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="queryCondition"></include>
        </trim>
    </select>


    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from video
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="intro != null and intro != ''">
                and intro = #{intro}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="cover != null and cover != ''">
                and cover = #{cover}
            </if>
            <if test="link != null and link != ''">
                and link = #{link}
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
            <if test="deletedAt != null">
                and deleted_at = #{deletedAt}
            </if>
        </where>
    </select>


    <!--    <select id="queryVideoDetails" resultMap="VideoDetailVOMap">-->
    <!--        select-->
    <!--        v.id,v.title,v.cover,v.created_at,-->
    <!--        c.`name` cname,-->
    <!--        u.`name` uname-->
    <!--        from video v-->
    <!--        left join category c on c.id=v.category_id-->
    <!--        left join `user` u on u.id=v.uid-->
    <!--        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">-->
    <!--            <if test="video.id != null">-->
    <!--                and v.id = #{video.id}-->
    <!--            </if>-->
    <!--            <if test="video.categoryId != null">-->
    <!--                and v.category_id = #{video.categoryId}-->
    <!--            </if>-->
    <!--            <if test="video.title != null and title != ''">-->
    <!--                and title = #{video.title}-->
    <!--            </if>-->
    <!--        </trim>-->
    <!--        <include refid="limitConfig"></include>-->
    <!--    </select>-->


    <!--通过主键修改数据-->
    <update id="update">
        update video
        <set>
            <include refid="commonsValue"></include>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from video
        where id = #{id}
    </delete>


    <!--新增video:哪个字段不为空就添加哪列数据,返回自增主键-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into video
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"/>
        </trim>
    </insert>

    <!--批量插入-->
    <insert id="insertBatch" useGeneratedKeys="true">
        insert into video(title, intro, uid, cover, link, category_id, created_at, updated_at, deleted_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.intro}, #{entity.uid}, #{entity.cover}, #{entity.link}, #{entity.categoryId},
            #{entity.createdAt}, #{entity.updatedAt}, #{entity.deletedAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" useGeneratedKeys="true">
        insert into video(title, intro, uid, cover, link, category_id, created_at, updated_at, deleted_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.intro}, #{entity.uid}, #{entity.cover}, #{entity.link}, #{entity.categoryId},
            #{entity.createdAt}, #{entity.updatedAt}, #{entity.deletedAt})
        </foreach>
        on duplicate key update
        title = values(title),
        intro = values(intro),
        uid = values(uid),
        cover = values(cover),
        link = values(link),
        category_id = values(category_id),
        created_at = values(created_at),
        updated_at = values(updated_at),
        deleted_at = values(deleted_at)
    </insert>

</mapper>

